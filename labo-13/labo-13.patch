From 7e8ad4c2e3cd8457aac8d5ca88b11e701029e1b9 Mon Sep 17 00:00:00 2001
From: "kevin.auberson" <kevin.auberson@heig-vd.ch>
Date: Fri, 12 Jan 2024 17:28:54 +0100
Subject: [PATCH] end of lab

---
 usr/host/memreplace.c | 56 +++++++++++++++++++++++++++++++++++++++----
 1 file changed, 51 insertions(+), 5 deletions(-)

diff --git a/usr/host/memreplace.c b/usr/host/memreplace.c
index 81d7862..cde6adb 100644
--- a/usr/host/memreplace.c
+++ b/usr/host/memreplace.c
@@ -26,9 +26,32 @@
 /* [0] = Valid on 1 bit */
 uint8_t page_table[NB_PAGES] = {0};
 
+uint8_t tdu[NB_PAGES] = {0};
+uint8_t tvc = 0;
+
 
 void replaceLRU(void) {
-    // TO COMPLETE
+    int oldestPage = -1;
+
+    for(int i = 0; i < NB_PAGES; i++){
+        if((page_table[i] & VALID_BIT_MASK) && (oldestPage == -1 || tdu[oldestPage] > tdu[i])){
+            oldestPage = i;
+        }
+    }
+
+    page_table[oldestPage] &= ~VALID_BIT_MASK;
+    page_table[oldestPage] |= SWAP_BIT_MASK;
+}
+
+void incCompteur(uint8_t noPage){
+    if(noPage >= 0 && noPage < NB_PAGES){
+        tdu[noPage] = ++tvc;
+    }
+    else{
+        printf("Page invalid !");
+        return;
+    }
+
 }
@@ -33,17 +33,19 @@ uint8_t tvc = 0;
 void replaceLRU(void) {
     int oldestPage = -1;
 
+    // Iterate through all pages to find the oldest page
     for(int i = 0; i < NB_PAGES; i++){
         if((page_table[i] & VALID_BIT_MASK) && (oldestPage == -1 || tdu[oldestPage] > tdu[i])){
             oldestPage = i;
         }
     }
-
+     // Invalidate and mark the oldest page for swapping
     page_table[oldestPage] &= ~VALID_BIT_MASK;
     page_table[oldestPage] |= SWAP_BIT_MASK;
 }
 
 void incCompteur(uint8_t noPage){
+    // Check if the page number is valid
     if(noPage >= 0 && noPage < NB_PAGES){
         tdu[noPage] = ++tvc;
     }
@@ -56,11 +58,50 @@ void incCompteur(uint8_t noPage){
 
 
 void replaceWSC(void) {
-    // TO COMPLETE
+    int oldestPage = -1;
+    for (size_t i = 0; i < NB_PAGES; ++i){
+        // Skip pages that are not valid
+        if(!(page_table[i] & VALID_BIT_MASK)){
+            continue;
+        }
+
+       // Store the index of the first page
+        if (oldestPage == -1) {
+            oldestPage = i;
+        }
+
+        // If the page is referenced, reset the reference bit
+        if (page_table[i] & REF_BIT_MASK) {
+			page_table[i] &= ~REF_BIT_MASK;
+        
+		} else{
+            // If the page is not referenced and meets the delta condition, mark it for swapping
+            if (tvc - tdu[i] > DELTA) {
+			    oldestPage = i;
+			    break;
+		    }
+        }
+    }
+    // Check if a valid page was found
+    if(oldestPage == -1){
+        printf("Aucune page valide trouvee");
+        return;
+    }else{
+        // Invalidate and mark the oldest page for swapping
+        page_table[oldestPage] &= ~VALID_BIT_MASK;
+        page_table[oldestPage] |= SWAP_BIT_MASK;
+    }
 }
 
+
 void updateTDU(void) {
-    // TO COMPLETE
+    // Iterate through all pages
+    for (size_t i = 0; i < NB_PAGES; ++i){
+        // Check if the page is referenced and valid, then update the TDU
+        if(page_table[i] & REF_BIT_MASK & VALID_BIT_MASK){
+            tdu[i] = tvc;
+        }
+    }
 }
 
 void init_page_table(void) {
@@ -121,10 +144,12 @@ int main(int argc, char *argv[]) {
             if (page_no >= 0 && page_no < NB_PAGES) {
                 if (LRU_run) {
                     /* LRU Related */
-                    if (!(page_table[page_no] & VALID_BIT_MASK)) /* VALID = 0 ? */
+                    if (!(page_table[page_no] & VALID_BIT_MASK)){ /* VALID = 0 ? */
                         replaceLRU();
-                    
-                    // TO COMPLETE
+                        page_table[page_no] &= ~SWAP_BIT_MASK;
+                        page_table[page_no] |= VALID_BIT_MASK;
+                    }
+                    incCompteur(page_no);
                 }
                 else {
                     /* WSC Related */
@@ -153,10 +194,15 @@ int main(int argc, char *argv[]) {
                 }
                 else {
                     /* WSC Related */
-                    if (!(page_table[page_no] & VALID_BIT_MASK)) /* VALID = 0 ? */
+                    if (!(page_table[page_no] & VALID_BIT_MASK)){ /* VALID = 0 ? */
                         replaceWSC();
+                        page_table[page_no] &= ~SWAP_BIT_MASK;
+                    }
+                    page_table[page_no] |= REF_BIT_MASK;
+                    page_table[page_no] |= VALID_BIT_MASK;
 
-                    // TO COMPLETE
+                    tvc++;
+                    updateTDU();
                 }
 
                 print_memory();
-- 
GitLab

